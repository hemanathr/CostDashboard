@using CostDashboard.Models
@using CostDashboard.Services
@inject CostDataService DataService

<div class="chart-card">
    <div class="chart-header">
        <h3>Service Comparison</h3>
    </div>
    
    <div class="chart-content">
        <TelerikChart>
            <ChartSeriesItems>
                <ChartBarSeries Data="@serviceData"
                              Field="@nameof(BarChartItem.ThisMonth)"
                              CategoryField="@nameof(BarChartItem.Service)"
                              Name="This Month">
                </ChartBarSeries>
                
                <ChartBarSeries Data="@serviceData"
                              Field="@nameof(BarChartItem.LastMonth)"
                              CategoryField="@nameof(BarChartItem.Service)"
                              Name="Last Month">
                </ChartBarSeries>
            </ChartSeriesItems>
            
            <ChartCategoryAxes>
                <ChartCategoryAxis>
                </ChartCategoryAxis>
            </ChartCategoryAxes>
            
            <ChartValueAxes>
                <ChartValueAxis>
                    <ChartValueAxisLabels Format="${0}"></ChartValueAxisLabels>
                </ChartValueAxis>
            </ChartValueAxes>
            
            <ChartTitle Text="Month-over-Month Service Comparison"></ChartTitle>
            
            <ChartLegend Position="ChartLegendPosition.Bottom">
            </ChartLegend>
        </TelerikChart>
    </div>
</div>

@code {
    [Parameter]
    public Filters Filters { get; set; } = new();
    
    [Parameter]
    public DateRange DateRange { get; set; } = new();
    
    private List<BarChartItem> serviceData = new();
    
    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }
    
    protected override async Task OnParametersSetAsync()
    {
        await LoadData();
    }
    
    private async Task LoadData()
    {
        // In a real app, this would filter based on the filters and date range
        var rawData = await DataService.GetServiceComparisonData(Filters, DateRange);
        
        serviceData = rawData.Select(item => new BarChartItem
        {
            Service = item.Key,
            ThisMonth = item.Value.ThisMonth,
            LastMonth = item.Value.LastMonth
        }).ToList();
    }
    
    public class BarChartItem
    {
        public string Service { get; set; } = string.Empty;
        public decimal ThisMonth { get; set; }
        public decimal LastMonth { get; set; }
    }
}